#ifndef __types_h
#define __types_h

#ifndef YYTOKENTYPE
#define YYTOKENTYPE

// Tokens: must be kept in sync when changes are made to lexer/parser
enum yytokentype {
  TOKEN_TRUE = 258,
  TOKEN_FALSE = 259,
  TOKEN_NIL = 260,
  TOKEN_LOCAL_ASSIGN = 261,
  TOKEN_COLON = 262,
  TOKEN_EXPORT = 263,
  TOKEN_SEMICOLON = 264,
  TOKEN_LINE_END = 265,
  TOKEN_COMMA = 266,
  TOKEN_STRING = 267,
  TOKEN_EVAL_STRING = 268,
  TOKEN_INTEGER = 269,
  TOKEN_FLOAT = 270,
  TOKEN_SYMBOL = 271,
  TOKEN_REGEX = 272,
  TOKEN_ID = 273,
  TOKEN_CLASS_ID = 274,
  TOKEN_DEFERRED_ARGUMENT = 275,
  TOKEN_ELIPSES = 276,
  TOKEN_DOT = 277,
  TOKEN_FUNCTION_DECLARATION = 278,
  TOKEN_OPEN_BRACE = 279,
  TOKEN_CLOSE_BRACE = 280,
  TOKEN_OPEN_PAREN = 281,
  TOKEN_CLOSE_PAREN = 282,
  TOKEN_AND = 283,
  TOKEN_OR = 284,
  TOKEN_NOT = 285,
  TOKEN_EOF = 286
};

#endif

enum {
  // Number types
  FX_INT_SHORT = TOKEN_EOF+10,
  FX_INT_STANDARD,
  FX_INT_LONG,
  FX_INT_LLONG,
  FX_DECIMAL_DOUBLE,
  FX_DECIMAL_LDOUBLE,

  // Bit Types
  FX_BIT_STRING,
  FX_BIT_NUMBER,

  // Expression Types
  FX_ST_LITERAL,
  FX_ST_LOOKUP,
  FX_ST_METHOD,
  FX_ST_FUNCTION,
  FX_ST_GROUPED,
  FX_ST_LIST,
  FX_ST_METHOD_ARGUMENTS,
  FX_ST_FUNCTION_ARGUMENTS,
  FX_ST_LOCAL_ASSIGN,
  FX_ST_COLON_EXPRESSION,
  FX_ST_EXPORT,
  FX_ST_EXPRESSIONS,

  // Contexts
  FX_OBJECT,
  FX_CLASS,
  FX_GLOBALS
};


#endif
